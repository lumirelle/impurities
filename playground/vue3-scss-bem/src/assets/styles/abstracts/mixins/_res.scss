/// The mixins for realizing responsive layout

@use '../variables/config/res' as config;
@use 'sass:map';
@use 'sass:string';

/// Realize responsive layout
/// @access public
/// @param {String} $key - Key
/// @example
///   @include res('md') {
///     @content;
///   }
/// @example
///  // All break-points:
///  // `<key>` means >= key width && <= next key width - 1
///  // `<key>+` means >= key width
///  // `<key>-` means <= key width - 1
///  $breakpoints: (
///    // xs 0~374px
///    "xs": "(min-width: #{$xs}) and (max-width: #{$sm - 1})",
///    "xs+": "(min-width: #{$xs})",
///    // sm 375~767px
///    "sm": "(min-width: #{$sm}) and (max-width: #{$md - 1})",
///    "sm+": "(min-width: #{$sm})",
///    "sm-": "(max-width: #{$sm - 1})",
///    // md 768~1023px
///    "md": "(min-width: #{$md}) and (max-width: #{$lg - 1})",
///    "md+": "(min-width: #{$md})",
///    "md-": "(max-width: #{$md - 1})",
///    // lg 1024~1199px
///    "lg": "(min-width: #{$lg}) and (max-width: #{$xl - 1})",
///    "lg+": "(min-width: #{$lg})",
///    "lg-": "(max-width: #{$lg - 1})",
///    // xl 1200~1919px
///    "xl": "(min-width: #{$xl}) and (max-width: #{$xxl - 1})",
///    "xl+": "(min-width: #{$xl})",
///    "xl-": "(max-width: #{$xl - 1})",
///    // xxl 1920px+
///    "xxl": "(min-width: #{$xxl})",
///    "xxl+": "(min-width: #{$xxl})",
///    "xxl-": "(max-width: #{$xxl - 1})"
///  ) !default;
@mixin res($key) {
  @if map.has-key(config.$breakpoints, $key) {
    @media only screen and #{string.unquote(map.get(config.$breakpoints, $key))} {
      @content;
    }
  } @else {
    @warn "Undefined points: `#{config.$breakpoints}`";
  }
}
