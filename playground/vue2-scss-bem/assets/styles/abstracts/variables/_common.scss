@use 'sass:map';

// Use css-var mixin to generate `var(--xxx)` statement
@use '../functions/css-var';

// ------------------------------------------------------------
// Background
// ------------------------------------------------------------
/// Background colors
$bg-color: () !default;
$bg-color: map.deep-merge(
  (
    '': #fff,
    'light': #f7f8f9,
    'dark': #f2f3f5,
    'primary': #eef9f9,
    'overlay': #838c8d,
  ),
  $bg-color
);

/// Background colors for dark scheme
$bg-color-dark: () !default;
$bg-color-dark: map.deep-merge(
  (
    '': #fff,
    'light': #f7f8f9,
    'dark': #f2f3f5,
    'primary': #eef9f9,
    'overlay': #838c8d,
  ),
  $bg-color-dark
);

// ------------------------------------------------------------
// Border
// ------------------------------------------------------------
/// Border width
$border-width: 1px !default;

/// Border style
$border-style: solid !default;

/// Border radius
$border-radius: () !default;
$border-radius: map.merge(
  (
    'round': 50%,
    'medium': 12px,
    'base': 8px,
    'small': 4px,
    'smallest': 2px,
  ),
  $border-radius
);

/// Border colors
$border-color: () !default;
$border-color: map.deep-merge(
  (
    '': #e2eaeb,
  ),
  $border-color
);

/// Border colors for dark scheme
$border-color-dark: () !default;
$border-color-dark: map.deep-merge(
  (
    '': #e2eaeb,
  ),
  $border-color-dark
);

// ------------------------------------------------------------
// Overlay
// ------------------------------------------------------------
/// Overlay colors
$overlay-color: () !default;
$overlay-color: map.merge(
  (
    '': rgb(0 0 0 / 80%),
    'light': rgb(0 0 0 / 70%),
    'lighter': rgb(0 0 0 / 50%),
  ),
  $overlay-color
);

// ------------------------------------------------------------
// Mask
// ------------------------------------------------------------
/// Mask colors
$mask-color: () !default;
$mask-color: map.merge(
  (
    '': rgb(255 255 255 / 90%),
    'light': rgb(255 255 255 / 30%),
  ),
  $mask-color
);

// ------------------------------------------------------------
// ZIndex
// ------------------------------------------------------------
/// ZIndex
$z-index: () !default;
$z-index: map.merge(
  (
    'normal': 1,
    'top': 1000,
    'popper': 2000,
  ),
  $z-index
);

// ------------------------------------------------------------
// Typography
// ------------------------------------------------------------
/// Font family
$font-family: () !default;
$font-family: map.merge(
  (
    '': "'Inter', 'Microsoft YaHei', '微软雅黑', sans-serif",
    'number': "'TCloud Number', sans-serif",
  ),
  $font-family
);

/// Font size
$font-size: () !default;
$font-size: map.merge(
  (
    'largest': 28px,
    'extra-large': 24px,
    'larger': 20px,
    'large': 18px,
    'medium': 16px,
    'base': 14px,
    'small': 12px,
    'extra-small': 10px,
  ),
  $font-size
);

/// Line height, related to font-size
$line-height: () !default;
$line-height: map.merge(
  (
    'largest': 36px,
    'extra-large': 32px,
    'larger': 28px,
    'large': 26px,
    'medium': 24px,
    'base': 22px,
    'small': 18px,
    'extra-small': 18px,
  ),
  $line-height
);

/// Font weight
$font-weight: () !default;
$font-weight: map.merge(
  (
    '': 400,
    'regular': 400,
    'medium': 500,
    'semibold': 600,
    'bold': 700,
  ),
  $font-weight
);

/// Text colors
$text-color: () !default;
$text-color: map.deep-merge(
  (
    'title': #042c2e,
    'body': #3c4848,
    'assist': #8e9595,
    'placeholder': #c7d2d2,
    'white': #fff,
  ),
  $text-color
);

/// Text colors for dark scheme

$text-color-dark: () !default;
$text-color-dark: map.deep-merge(
  (
    'title': #042c2e,
    'body': #3c4848,
    'assist': #8e9595,
    'placeholder': #c7d2d2,
    'white': #fff,
  ),
  $text-color-dark
);

// ------------------------------------------------------------
// Transition
// ------------------------------------------------------------
/// Transition
$transition: () !default;
$transition: map.merge(
  (
    'all': all css-var.get-var('transition-duration') css-var.get-var('transition-function-ease-in-out-bezier'),
    'fade': opacity css-var.get-var('transition-duration') css-var.get-var('transition-function-fast-bezier'),
    'md-fade': (
      transform css-var.get-var('transition-duration') css-var.get-var('transition-function-fast-bezier'),
      opacity css-var.get-var('transition-duration') css-var.get-var('transition-function-fast-bezier'),
    ),
    'fade-linear': opacity css-var.get-var('transition-duration-fast') linear,
    'border': border-color css-var.get-var('transition-duration-fast')
      css-var.get-var('transition-function-ease-in-out-bezier'),
    'box-shadow': box-shadow css-var.get-var('transition-duration-fast')
      css-var.get-var('transition-function-ease-in-out-bezier'),
    'color': color css-var.get-var('transition-duration-fast') css-var.get-var('transition-function-ease-in-out-bezier'),
  ),
  $transition
);

/// Transition duration
$transition-duration: () !default;
$transition-duration: map.merge(
  (
    '': 0.3s,
    'fast': 0.2s,
  ),
  $transition-duration
);

/// Transition function
$transition-function: () !default;
$transition-function: map.merge(
  (
    'ease-in-out-bezier': cubic-bezier(0.645, 0.045, 0.355, 1),
    'fast-bezier': cubic-bezier(0.23, 1, 0.32, 1),
  ),
  $transition-function
);

/// Max content width of page component
$content-max-width: () !default;
$content-max-width: map.merge(
  (
    '': 1366px,
    'small': 1200px,
  ),
  $content-max-width
);
